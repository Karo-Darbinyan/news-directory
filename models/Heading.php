<?php

namespace app\models;

use app\models\query\HeadingQuery;
use app\models\query\NewsHeadingQuery;
use yii\db\ActiveQuery;
use yii\db\ActiveRecord;

/**
 * This is the model class for table "heading".
 *
 * @property int $id
 * @property string $name
 * @property int|null $parent_id
 *
 * @property Heading $parent
 * @property Heading[] $headings
 * @property NewsHeading[] $newsHeadings
 */
class Heading extends ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'heading';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['name'], 'required'],
            [['parent_id'], 'integer'],
            [['name'], 'string', 'max' => 255],
            [['parent_id'], 'exist', 'skipOnError' => true, 'targetClass' => self::class, 'targetAttribute' => ['parent_id' => 'id']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Name',
            'parent_id' => 'Parent ID',
        ];
    }

    /**
     * Gets query for [[Parent]].
     *
     * @return ActiveQuery|HeadingQuery
     */
    public function getParent()
    {
        return $this->hasOne(self::class, ['id' => 'parent_id']);
    }

    /**
     * Gets query for [[Headings]].
     *
     * @return ActiveQuery|HeadingQuery
     */
    public function getHeadings()
    {
        return $this->hasMany(self::class, ['parent_id' => 'id']);
    }

    /**
     * Gets query for [[NewsHeadings]].
     *
     * @return ActiveQuery|NewsHeadingQuery
     */
    public function getNewsHeadings()
    {
        return $this->hasMany(NewsHeading::class, ['heading_id' => 'id']);
    }

    /**
     * {@inheritdoc}
     * @return HeadingQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new HeadingQuery(get_called_class());
    }

//    public function populateRelation($name, $records)
//    {
//        parent::populateRelation($name, $records); // TODO: Change the autogenerated stub
//    }
//
//    public function isRelationPopulated($name)
//    {
//        return parent::isRelationPopulated($name); // TODO: Change the autogenerated stub
//    }
}
